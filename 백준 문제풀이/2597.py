# https://www.acmicpc.net/problem/2597
'''
<아이디어>
수학, 구현
접는 순서는 빨(r)->파(b)->노(y)
시작점과 기준점(접는 점), 총 길이를 알고있다면 접은 후의 길이가 얼마나 되는지 알 수 있지 않을까?
각각 2, 4, 8 이라면? => 전체 길이는 8인 상황에서 점 4에서 접는 상황 => 4-2 = 2 이므로 8-2 = 6만큼의 길이가 남는다.
0 1 2 3 4 5 6 7 8 9 10
    r y b b   r      y

현재 상황은 시작점이 0 전체길이는 10 인 상황
# (2,7),(4,5),(3,10)
# 1. 빨간색 두 점의 중간 지점을 찾아서 접는다.
(2,7) : 2+7 = 9, 9//2 = 4.5 
    # 1.1 중간지점과 시작 좌표를 비교하여 전체 길이에서 중간 지점을 빼고 
    # 1.2 다른 점의 좌표가 중간점(4.5)보다 오른쪽에 위치한다면 좌표 이동 x
    # 1.3 그렇지않다면 두 점의 합에 해당하는 위치로 좌표 이동
        2+7 = 9, 4->5, 5->위치이동x(4.5<5), 3->6, 10->위치이동x(4.5<10)
# 2. 파란색 점이 서로 같은 위치에 있는지 확인한다. 같은 위치에 있다면 다른 색의 순서로 이동한다.
    # 2.1 시작좌표는 새롭게 4.5가 되었고 전체 길이는 10-4.5 = 5.5인 상황
변환된 좌표에서 위 알고리즘을 그대로 수행

<검증>
0 1 2 3 4 5 6 7 8 9 10
    b b   y y r r 

# r 접기
7+8 = 15, 중간점 7.5, 전체 길이 (10-7.5 = 2.5) < (7.5-0 = 7.5) => 7.5
7.5 8 9 10 11 12 13 14 15
    r y  y     b  b

# b 접기
12 + 13 = 25, 중간점 12.5, 전체 길이 (15-12.5 = 2.5) < (12.5-7.5 = 5) => 5
12.5 13 14 15 16 17 17.5
b           y  y

# y 접기
15 + 16 = 31, 중간점 15.5, 전체길이 (17.5-15.5=2) < (15.5-12.5=3) => 3
'''
start = 0 # 시작 좌표는 0
end = int(input()) # 끝 점의 좌표
length = end-start+1
colors = [list(map(int,input().split())) for _ in range(3)]
for i,color in enumerate(colors):
    # 만약 두 점의 좌표가 같다면 해당 색상에 대해서는 이동하지 않는다.
    if color[0] == color[1]:
        continue
    # 중간점 구하기
    color_sum = sum(color)
    mid = round(color_sum/2,1) # 소수점 첫째자리까지
    # 전체 길이 구하기
    length = max((end-mid),(mid-start))
    # 새로운 시작점, 끝점 구하기
    start = mid
    end = start + length
    # 좌표 이동
    # 현재 움직인 좌표 이후의 색에 대해서만
    for j in range(i,len(colors)):
        for k in range(2):
            if colors[j][k] < mid: # 중간점보다 왼쪽에 있는 경우에만 새로운 좌표로 움직인다.
                colors[j][k] = color_sum - colors[j][k]
print(length)