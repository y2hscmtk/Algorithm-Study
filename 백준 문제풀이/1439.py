# 다솜이는 0과 1로만 이루어진 문자열 S를 가지고 있다. 다솜이는 이 문자열 S에 있는 모든 숫자를 전부 같게 만들려고 한다. 다솜이가 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것이다. 뒤집는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미한다.

# 예를 들어 S=0001100 일 때,

# 전체를 뒤집으면 1110011이 된다.
# 4번째 문자부터 5번째 문자까지 뒤집으면 1111111이 되어서 2번 만에 모두 같은 숫자로 만들 수 있다.
# 하지만, 처음부터 4번째 문자부터 5번째 문자까지 문자를 뒤집으면 한 번에 0000000이 되어서 1번 만에 모두 같은 숫자로 만들 수 있다.

# 문자열 S가 주어졌을 때, 다솜이가 해야하는 행동의 최소 횟수를 출력하시오.

# 아이디어: 배열 s를 0과 1 둘 중 하나의 수를 기준으로 잡고, 떨어져있는 덩어리가 몇개인지 파악하고, 반복결과 최솟값을 출력한다.

s = list(map(int, input()))
count = 0  # 1묶음의 개수
count2 = 0
check = 0
# 0에 대하여 반복 실행
for i in range(len(s)):  # 배열 s의 길이만큼 반복 실행
    if s[i] == 0:
        check = 0
    elif s[i] != 0:  # 해당 배열의 인덱스가 1이라면
        check += 1  # 1묶음의 최초 1을 만났을때 check를 +1해줌 => 1묶음의 두번째 1을 만나면 2이상의 숫자가 될것
        if check == 1:  # 1묶음의 첫번째 요소를 만났을때에 한하여, 묶음의 개수를 증가시킨다.
            count += 1  # 1묶음의 개수 +1

check = 0
for i in range(len(s)):  # 배열 s의 길이만큼 반복 실행
    if s[i] == 1:
        check = 0
    elif s[i] != 1:  # 해당 배열의 인덱스가 1이라면
        check += 1  # 1묶음의 최초 1을 만났을때 check를 +1해줌 => 1묶음의 두번째 1을 만나면 2이상의 숫자가 될것
        if check == 1:  # 1묶음의 첫번째 요소를 만났을때에 한하여, 묶음의 개수를 증가시킨다.
            count2 += 1  # 1묶음의 개수 +1

if count < count2:
    print(count)
else:
    print(count2)
