# https://www.acmicpc.net/problem/2004
'''
아이디어1 : 파스칼의 삼각형
nCk = n-1Ck-1 + n-1Ck 임을 이용하여
m까지 미리 구해놓고 str변환하여 뒤에서부터 세기
=> 메모리 초과
'''
'''
아이디어2 : 펙토리얼
끝자리 0의 개수는 nCm의 내부에 2*5가 몇쌍이 있는지를 묻는것
2가 a개 5가 b개 있다면 min(a,b)개 만큼의 2*5쌍이 존재하는 것
20 = > 2:2 5:1 => 1 => 0의 개수 1개
200 => 2:3 5:2 => 2 => 0의 개수 2개

nCm = n!/(n-m)!m! 이므로
각 펙토리얼별로 2와 5의 개수를 기록해뒀다가 계산에 사용
=> 메모리 초과 : 메모리 20억개 불가능
'''
'''
풀이 참조
2와 5의 개수를 구하는 과정
100이라는 수가 있을때
5의 배수들은 5를 1개 갖고 있다는 사실이 당연함
5,10,15..100 => 100//5개의 자연수들은 5를 1개 갖고 있음
위의 수들 중에서 5^2의 배수들은 5를 추가로 1개 더 갖고 있음
25,50,75,100 => 4개의 자연수들..
따라서 100!에서 5의 개수는 100//5 + 100//5^2 개가 됨
'''
n,m = map(int,input().split())

def count_2(n):
    two = 0
    while n != 0:
        n = n // 2
        two += n
    return two

def count_5(n):
    five = 0
    while n != 0:
        n = n // 5
        five += n
    return five

# nCm
def result(n,m):
    # nCm = n!/(n-m)!m!임을 이용
    # 2와 5의 쌍의 개수를 펙토리얼별로 각각 빼주자
    c2 = count_2(n) - count_2(n-m) - count_2(m)
    c5 = count_5(n) - count_5(n-m) - count_5(m)
    
    return min(c2,c5) # 2와 5의 쌍의 개수 반환

print(result(n,m))