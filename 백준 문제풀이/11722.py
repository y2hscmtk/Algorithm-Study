# https://www.acmicpc.net/problem/11722

'''
문제
수열 A가 주어졌을 때, 가장 긴 감소하는 부분 수열을 구하는 프로그램을 작성하시오.

예를 들어, 수열 A = {10, 30, 10, 20, 20, 10} 인 경우에 가장 긴 감소하는 부분 수열은 A = {10, 30, 10, 20, 20, 10}  이고, 길이는 3이다.

입력
첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.

둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

6
10 30 10 20 20 10
'''

n = int(input())

# 데이터 입력받기
data = list(map(int, input().split()))

# dp 테이블 작성 => 감소하는 수열의 최대길이 저장
dp = [0]*n

dp[0] = 1  # 0번째 인덱스에 대한 감소하는 부분수열의 최대길이는 1로 고정

# dp 테이블에 값 기록 => 1번째부터 n-1번째까지
for i in range(1, n):
    for j in range(i):  # 0번째 인덱스부터 i번째 인덱스까지 비교
        # 만족해야 하는 조건
        # 내림차순으로 감소하는 수열일것
        # 이전 인덱스들 중, 현재 값보다 큰 데이터가 존재할것 => 그래야 내림차순이 만족되므로
        if data[j] > data[i] and dp[j] > dp[i]:
            # dp값 업데이트 => 길이 누적
            dp[i] = dp[j]
    dp[i] += 1  # 길이를 누적시켜야 하므로 +1해야함
print(max(dp))
