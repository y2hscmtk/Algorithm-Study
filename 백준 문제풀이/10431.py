# https://www.acmicpc.net/problem/10431
'''
키 순서대로 번호를 부여한다.
키가 가장 작은 아이가 1번이 되다. 학생들은 항상 20명이다. 같은 키를 가진 학생은 없다.

아무나 한 명을 뽑아 줄의 맨 앞에 세운다. 그리고 다른 학생들에 대해서
1. 자기 앞에 자기보다 키가 큰 학생이 없다면 그냥 그 자리에 선다.
2. 자기 앞에 자기보다 키가 큰 학생이 한 명 이상 있다면 그 중 가장 앞에 있는 학생(A)의 바로 앞에 선다.

이 방법을 마지막 학생까지 수행할 때, 학생들은 총 몇 번 뒤로 물러서게 될까?

901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 900

901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919
900인 학생의 앞에 자기보다 큰 학생이 19명 있으므로 각 학생이 한 걸음 씩 19걸음을 가야한다. 

2 919 918 917 916 915 914 913 912 911 910 909 908 907 906 905 904 903 902 901 900

918 919 => 1
917 918 919 => 1 + 2
916 917 918 919 => 1 + 2 + 3
.
.
.
900 901 902 ... 919 => 1 + 2 + 3 + ... + 17 + 18 + 19 = 190
'''
import sys
input = sys.stdin.readline
for _ in range(int(input())):
    # 테스트 케이스의 번호 T, 20명의 학생들
    students = list(map(int,input().split()))
    curr = [0]*20 # 현재 줄 세운 학생들 배열
    step = 0 # 몇 걸음을 걸었는지 
    for i in range(20): # 20명의 학생들에 대해서
        # i앞에 선 학생들 중 i보다 큰 사람이 몇명 있는지 확인
        for j in range(i,-1,-1):
            if curr[j] > students[i+1]: # 현재 학생보다 큰 학생이 존재한다면(i+1부터 학생 시작임)
                step+=1
            else: # 더이상 없는 시점이라면, 그곳이 i가 설 자리
                # 해당 자리에서부터 학생들 모두 한 칸씩 앞으로 옮기기(step은 이미 누적됨)
                for k in range(i,j,-1):
                    curr[k] = curr[k-1]
                curr[j] = students[i+1]
    print(students[0],step)