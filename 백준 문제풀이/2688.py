# https://www.acmicpc.net/problem/2688

'''
dp[1] = 0~9
dp[2]
dp[2][0]
앞자리가 0일때
0 0
0 1
...
0 9
=> 10

dp[2][1]
앞자리가 1일때
1 1
1 2
...
1 9
=> 9
=> 10 + 9 + 8 + ... + 1 = 55가지 경우의수

dp[3]
dp[3][0]
0 0 0
0 0 1
..
0 0 9 => dp[2][0]
0 1 0
0 1 1
..
0 1 9 => dp[2][1]
..
dp[3][0] = dp[2][0] ~ dp[2][1]

dp[3][1]
1 1 1
1 1 2
...
1 1 9
..
1 9 9 
dp[3][1] = dp[2][1] ~ dp[2][9]

# 점화식
# dp[n][k] = dp[n-1][k] ~ dp[n-1][9]
n자리 수인 경우 맨 왼쪽 숫자가 k인 경우
'''
# 메모이제이션
# 2차원 배열 생성 dp 테이블 
dp = [[0 for j in range(10) ] for _ in range(65)] # 1자리부터 최대 64자리까지 
# 각 자리수에 올 수 있는 숫자는 0부터 9까지

# dp[1][0] 1자리 수 면서 맨 앞의 수가 0인 경우
# dp[1]에 대해서는 미리 초기화
for i in range(10):
    dp[1][i] = 1 # 한 자리 수는 경우의 수가 1가지밖에 없으니까

# 2자리 수 부터 점화식 적용가능
for i in range(2,65):
    # dp[2]
    # 한 칸에 올 수 있는 숫자는 0~9
    for j in range(10):
        #dp[2][0]
        # j부터 9번째 경우의 수까지 더해서 기록
        for k in range(j,10):
            dp[i][j] += dp[i-1][k] # k부터 9까지 더하기

# t번의 경우의 수에 대해서 작업 수행
for i in range(int(input())): # t번만큼 수행
    n = int(input())
    print(sum(dp[n]))

