# https://www.acmicpc.net/problem/6986

'''
이때 절사평균(7, 2)는 정렬된 전체 점수 일곱 개 중 양쪽 끝에서 두 개씩을 제외하고 난 9.3, 9.3, 9.5의 평균인 9.37이 된다(소수점이하 셋째 자리에서 반올림).

또 보정평균(7, 2)는 정렬된 전체 점수 일곱 개 중 양쪽 끝에서 각각 두 개를, 남은 점수 중 가장 가까운 것으로 교체한 

9.3, 9.3, 9.3, 9.3, 9.5, 9.5, 9.5의 평균으로 9.39가 된다(소수점이하 셋째 자리에서 반올림).

N개의 점수와 양쪽에서 제외하는 개수 K 값이 주어졌을 때 절사평균(N, K)와 보정평균(N, K)를 계산하는 프로그램을 작성하시오.
'''
'''
절사평균(7,2)는 전체 개수가 7일때, 양쪽에서 2개씩 제외한 값의 평균을 말하고
보정평균(7,2)는 전체 개수가 7일때, 양쪽 2개의 값을 가장 가까운 값으로 변경한 배열의 평균을 말한다.
'''
n, k = map(int, input().split())

score = []
for _ in range(n):
    score.append(float(input()))

# 오름차순 정렬
score.sort()

# 첫째 줄에 절사평균(N, K)를, 둘째 줄에 보정평균(N, K)를 각각 소수점이하 셋째 자리에서 반올림하여 둘째 자리까지 출력한다.
# 예를 들어 결과값이 9.667인 경우 9.67로, 5인 경우 5.00으로, 5.5인 경우에는 5.50으로 출력한다.

j, b = 0, 0  # 절사평균, 보정평균

# 절사평균 구하기 k~n-k인덱스로~
j = sum(score[k:n-k])/(n-2*k)

# 보정평균 구하기
b = (sum(score[k:n-k]) + score[k]*k + score[n-k-1]*k)/(n)

# 부동소수점 문제 해결을 위해 0.0000001을 더해야함
print('%.2f' % (j+0.00000001))
print('%.2f' % (b+0.00000001))
