# https://www.acmicpc.net/problem/1912

'''
n개의 정수로 이루어진 임의의 수열이 주어진다. 

우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 

단, 수는 한 개 이상 선택해야 한다.

예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어졌다고 하자. 여기서 정답은 12+21인 33이 정답이 된다.
'''
'''
아이디어 : 최장길이 수열과 비슷하면서 다른 문제이다.
최장길이수열을 구할때 적용했던 아이디어를 적용시켜 문제를 해결해보자
'''

n = int(input())


# 최대 합을 저장할 dp테이블
dp = [0]*n

# 임의의 수열 입력받기
data = list(map(int, input().split()))

# "연속된 수"의 의미는 붙어있는 수라는 의미

# 조금이라도 더 큰 수를 들고 가면 이득이므로
# dp[i-1] + data[i] > 0을 만족한다면 조금이라도 큰 값을 들고 다음 수로 넘어갈 수 있으므로 누적한다.
# 단 이때 음수를 더함으로서 값이 더 작아지는 경우를 방지하기 위해 더한값과 더하지 않은 값 둘 중 최대값을 dp에 기록한다.
# 그렇지 않은 경우 dp[i]의 값은 해당 인덱스의 값으로 한다.

dp[0] = data[0]  # 0번째 값은 그대로 들고 가야 하므로

for i in range(1, n):
    if dp[i-1] + data[i] > 0:
        # 점화식을 만족한다면
        # 음수를 더함으로서 수가 더 작아질 수 있으므로 더한것이 더 큰지, 안 더한것이 더 큰것인지를 확인한다.
        dp[i] = max(data[i], dp[i-1] + data[i])
        # dp[i] = dp[i-1] + data[i]  # 누적시킨다(조금이라도 수를 다음 수에 더하기 위하여)
    else:  # 만족하지 않는다면 값을 저장한다.
        dp[i] = data[i]

# dp 테이블에 저장된 값 중 최대 값이 정답이 된다. (누적 합이므로)
print(max(dp))
