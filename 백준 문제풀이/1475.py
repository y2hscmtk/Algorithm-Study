# https://www.acmicpc.net/problem/1475

'''
백준 1475번

다솜이는 은진이의 옆집에 새로 이사왔다. 다솜이는 자기 방 번호를 예쁜 플라스틱 숫자로 문에 붙이려고 한다.

다솜이의 옆집에서는 플라스틱 숫자를 한 세트로 판다. 한 세트에는 0번부터 9번까지 숫자가 하나씩 들어있다.
다솜이의 방 번호가 주어졌을 때, 필요한 세트의 개수의 최솟값을 출력하시오. 
(6은 9를 뒤집어서 이용할 수 있고, 9는 6을 뒤집어서 이용할 수 있다.)

첫째 줄에 다솜이의 방 번호 N이 주어진다. N은 1,000,000보다 작거나 같은 자연수이다.
'''

'''
아이디어 : 실제로 사용할수 있는 숫자 배열을 만들고, 입력받은 데이터에서 숫자들을 지워가며 생각
단, 6과 9의 경우는 재활용할수 있도록 조건문을 설정하면 될듯
'''

# 실제로 사용가능한 카드 배열

# 방번호 n의 최대값은 1,000,000 이므로 가장 최악의 상황을 가정했을때 같은 단어가 1111111과 같이 7번 반복될수 있음
# 즉 아무리 단어카드를 많이 사용하는 경우에도 7개의 카드세트보다 더 많은 수를 사용하지 않는다는 의미


card_count = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]  # 현재사용중인 카드의 수를 표시할 배열

# card = 1  # 최소 1팩이상의 카드를 사용할것이기 때문에

input_number = input()

notInputSix = True  # 이전에 6에 저장하였는지 아닌지에 대해 확인

for i in range(len(input_number)):
    if int(input_number[i]) != 6 and int(input_number[i]) != 9:
        # 6과 9가 아닌경우는 사용한 카드 수를 증가시킨다.
        # 해당수만큼 그 카드를 이용했다는 의미로 카운드를 증가시킨다.
        card_count[int(input_number[i])] += 1
    else:  # 6과 9의 경우 => 카드를 돌아가며 사용해야 최솟값을 만족시킬수 있다
        # 두 카드를 사용한 횟수의 차이를 비교해가며 돌아가며 카드를 사용한다.
        if notInputSix:  # 이전에 6에 저장하지 않았다면
            card_count[6] += 1  # 6을 사용했다고 저장하고
            notInputSix = False  # 6에 저장하였음을 기록한다/
        else:  # 이전에 6에 저장하였다면
            card_count[9] += 1  # 9를 사용했다고 저장한다.
            notInputSix = True  # 또한 6에 저장하지 않았음을 저장한다.


# 가장 많이 사용한 숫자의 횟수가 사용한 카드세트의 수가 된다.
print(max(card_count))
