# https://www.acmicpc.net/problem/2467

'''
KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 

각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다. 

산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.

같은 양의 두 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 

이 연구소에서는 같은 양의 두 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다. 

예를 들어, 주어진 용액들의 특성값이 [-99, -2, -1, 4, 98]인 경우에는 특성값이 -99인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 

이 용액의 특성값이 0에 가장 가까운 용액이다. 

참고로, 두 종류의 알칼리성 용액만으로나 혹은 두 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.

산성 용액과 알칼리성 용액의 특성값이 정렬된 순서로 주어졌을 때, 

이 중 두 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액을 찾는 프로그램을 작성하시오.
'''

'''
아이디어 : 탐색하고자 하는 대상이 x일때, 이진 탐색을 통해 입력받은 배열에서 0-x를 찾고, 0-x가 존재하지 않는다면 앞,뒤 숫자중 더 0에 가깝게 되는 숫자를 고른다.
모든 숫자에 대해 위 과정을 반복하여 두 용액을 결정한다.
'''
import sys
n = int(input())

# 용액 데이터 입력받기 => 오름차순으로 입력된다.
data = list(map(int, input().split()))

result = 2000000000  # 두 용액을 더했을때, 가장 커지는 경우는 -100000..과 100000..을 더했을때이다.
# 배열을 돌면서 탐색 진행
for i in range(n):
    target = data[i]

    # 이분탐색을 통해 알맞은 데이터 탐색
    # 탐색에 실패할경우(알맞는 데이터가 없을경우 임시로 값을 설정해두고 탐색 반복)
    start, end = i+1, n-1

    while start <= end:
        # 가운데 값 지정
        mid = (start + end) // 2

        # 결국 문제의 핵심은 용액과 다른 용액을 더했을때의 값이 0에 가까워지면 되는것
        # 임시로 두 용액을 더한 값을 계산한다.
        tmp = target + data[mid]

        # 더한 두 용액의 값이 기존에 섞은 용액의 값보다 작다면, 업데이트한다.
        if abs(tmp) < result:
            result = abs(tmp)
            # 정답으로 출력할 두 값을 업데이트
            x, y = data[i], data[mid]

            # 0에 가까운수를 만드는것이 목표이기때문에
            # 0이 되었다면 더이상 탐색을 진행하지않고, 반복문을 종료한다.
            if tmp == 0:
                break

        # 두 수를 더한값이 0보다 작다면
        if tmp < 0:
            start = mid + 1  # 탐색의 범위를 좁힌다.
        # 혹은 크다면
        else:
            end = mid - 1  # 탐색의 범위를 좁힌다.

print(x, y)
