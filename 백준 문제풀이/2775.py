# https://www.acmicpc.net/problem/2775

'''
평소 반상회에 참석하는 것을 좋아하는 주희는 이번 기회에 부녀회장이 되고 싶어 각 층의 사람들을 불러 모아 반상회를 주최하려고 한다.

이 아파트에 거주를 하려면 조건이 있는데, 

“a층의 b호에 살려면 자신의 아래(a-1)층의 1호부터 b호까지 사람들의 수의 합만큼 사람들을 데려와 살아야 한다” 는 계약 조항을 꼭 지키고 들어와야 한다.

아파트에 비어있는 집은 없고 모든 거주민들이 이 계약 조건을 지키고 왔다고 가정했을 때, 

주어지는 양의 정수 k와 n에 대해 k층에 n호에는 몇 명이 살고 있는지 출력하라. 단, 아파트에는 0층부터 있고 각층에는 1호부터 있으며, 0층의 i호에는 i명이 산다.
'''

'''
아이디어 : 0층 i호에는 i명이 산다는것을 이용하여 재귀함수를 작성한다.
'''

# k층 n호에 대한 주민정보를 얻기위해 함수를 작성한다.

# k층 n호에 대한 주민의 주거 수는 f(k,n) = f(k-1,1) + f(k-1,2) + ... + f(k-1,n) 의 합과 같다.

# 테스트 케이스의 개수
t = int(input())

# 14x14까지 가능하므로 101호의 경우 dp[1][1]
dp = [[0]*15 for i in range(15)]

# t번 수행
for i in range(t):
    # k층
    k = int(input())
    # n홀
    n = int(input())

    for j in range(k+1):
        for h in range(n+1):
            if j == 0:  # 0층의 경우만 알고있음
                dp[j][h] = h  # n호의 경우 n명이 거주함을 기록
            else:  # 0층이 아닌경우
                if dp[j][h] == 0:  # 현재 해당층과 관련하여 dp테이블에 정보가 없다면
                    for l in range(h+1):
                        dp[j][h] += dp[j-1][l]
                else:  # 값이 기록되어 있는경우
                    continue  # 다음으로 넘어간다.
                    # def member(k, n):
                    #     if k == 0:
                    #         # 0일때의 경우를 작성한다.
                    #         # 0호보다 낮아지는 경우에 대해서는 고려하지 않는다.
                    #         if n >= 0:
                    #             count += n*(n+1)*0.5  # 0~n까지의 합을 누적한다.
                    #     else:  # k층이 1층 이상의 경우 그 이하의 층을 호출하여 더한다.
                    #         return member(k-1, n)
                    # # 우리가 확실히 알고 있는것은 0층에 대한 정보이므로
    print(dp[k][n])
    # #

    # # 출력하기
    # member(k, n)
