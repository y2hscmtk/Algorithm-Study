# 로봇 청소기가 주어졌을 때, 청소하는 영역의 개수를 구하는 프로그램을 작성하시오.

# 첫째 줄에 세로 크기 N과 가로 크기 M이 주어진다. (3 ≤ N, M ≤ 50)

# 둘째 줄에 로봇 청소기가 있는 칸의 좌표(r, c)와 바라보는 방향 d가 주어진다. d가 0인 경우에는 북쪽을, 1인 경우에는 동쪽을, 2인 경우에는 남쪽을, 3인 경우에는 서쪽을 바라보고 있는 것이다.

# 셋째 줄부터 N개의 줄에 장소의 상태가 북쪽부터 남쪽 순서대로, 각 줄은 서쪽부터 동쪽 순서대로 주어진다. 빈 칸은 0, 벽은 1로 주어진다. 지도의 첫 행, 마지막 행, 첫 열, 마지막 열에 있는 모든 칸은 벽이다.

# 로봇 청소기가 있는 칸의 상태는 항상 빈 칸이다.

n, m = map(int, input().split())

r, c, direction = map(int, input().split())  # r은 현재 행 정보,
# 방 정보를 담을 데이터
room = []

# 방향 정보
d = [0, 1, 2, 3]  # 북 동 남 서 방향 표기법

# 북 동 남 서 방향으로 이동함에 따라 달라지는 r,c의 좌표 r은 북쪽으로부터 떨어진 칸의 개수(행) c는 서쪽에서부터 떨어진 칸의 개수(열)
# room[r][c]
dr = [-1, 0, 1, 0]
dc = [0, 1, 0, -1]

for i in range(n):  # n개의 행에 대하여 반복하여 방의 정보를 입력받아 저장
    room.append(list(map(int, input().split())))  # 0은 빈칸 1은 벽

room[r][c] = 2  # 현재 장소를 청소한다. #청소를 끝낸 곳은 2로 기록한다.

# 1. 현재 장소를 청소한다.
# 2. 현재 위치에서 현재 방향을 기준으로 왼쪽방향부터 차례대로 탐색을 진행한다.
#     1. 왼쪽 방향에 아직 청소하지 않은 공간이 존재한다면, 그 방향으로 회전한 다음 한 칸을 전진하고 1번부터 진행한다.
#     2. 왼쪽 방향에 청소할 공간이 없다면, 그 방향으로 회전하고 2번으로 돌아간다.
#     3. 네 방향 모두 청소가 이미 되어있거나 벽인 경우에는, 바라보는 방향을 유지한 채로 한 칸 후진을 하고 2번으로 돌아간다.
#     4. 네 방향 모두 청소가 이미 되어있거나 벽이면서, 뒤쪽 방향이 벽이라 후진도 할 수 없는 경우에는 작동을 멈춘다.

# 청소를 끝낼때까지 반복
count = 0  # 네 방향을 모두 회전했는지 확인하기 위한 변수
clean = 1  # 로봇 청소기가 청소한 칸의 개수를 확인하기 위한 변수
while True:
    direction = d[direction]  # 방향값이 음수가 되지 않게 하기 위해

    if count == 4:  # 네 방향을 모두 확인했을때, 네 방향 모두 청소가 되어 있거나 벽이라면
        # 뒤쪽방향이 벽인지 확인하고
        if room[r-dr[direction]][c-dc[direction]] == 1:  # 뒤쪽 방향이 벽이라면
            break
        else:  # 벽이 아니라면
            r = r - dr[direction]
            c = c - dc[direction]  # 후진한다.
            count = 0  # 카운트 0으로 초기화

    # 네 방향을 아직 모두 확인하지 않았을 경우 왼쪽방향부터 확인한다.

    mr = r+dr[direction-1]  # 왼쪽으로 회전한후 이동했을때의 r좌표의 임시 정보
    mc = c+dc[direction-1]  # 왼쪽으로 회전한후 이동했을때의 c좌표의 임시 정보

    # 방 영역을 벗어난 경우, 무시하고 다음단계 진행
    if mr < 0 or mr >= n or mc < 0 or mc >= m:
        continue
    else:
        if room[mr][mc] == 0:  # 현재 서있는 위치에서 왼쪽방향이 아직 청소하지 않은 지역이라면
            r = mr
            c = mc  # 왼쪽방향으로 이동한 후,
            room[r][c] = 2  # 해당 위치를 청소한다.
            clean += 1  # 방 하나를 청소했다는 의미로 clean을 +1한다.
            count = 0  # 한번 작업을 마쳤기때문에, 카운트를 0으로 바꾼다.
        else:  # 벽(1)이거 이미 청소한곳(2)이라면 방향만 왼쪽방향으로 돌린다.
            count += 1  # 한쪽 방향을 확인했다는 의미로 1을 더해준다.
        direction -= 1  # 왼쪽방향으로 회전

print(clean)
