# https://www.acmicpc.net/problem/2193
'''
21:46 ~ 
이친수는 0으로 시작하지 않는다.
이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.
N자리 이친수의 개수를 구하는 프로그램

1로 시작하고, 연속해서 1이 올 수 없으므로
n>=4에서
10 을 앞자리로 두면 dp[2]의 개수만큼 뒤에 붙일 수 있음
100 을 앞자리로 두면 dp[1]의 개수만큼 뒤에 붙일 수 있음
1000 을 ...
10000 .. 
dp[n] = dp[n-2] + dp[n-3] + ... + dp[0]
dp[n] = sum(dp[:n-1])
N(1 ≤ N ≤ 90)
'''
dp = [0]*91
dp[0],dp[1],dp[2] = 1,1,1
for i in range(3,91):
    dp[i] = sum(dp[:i-1]) # 0~i-2까지의 개수

print(dp[int(input())])