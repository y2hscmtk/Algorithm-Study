# https://www.acmicpc.net/problem/1260

# 백준 1260번 DFS/BFS

'''
그래프를 DFS로 탐색한 결과와 BFS로 탐색한 결과를 출력하는 프로그램을 작성하시오. 
단, 방문할 수 있는 정점이 여러 개인 경우에는 정점 번호가 작은 것을 먼저 방문하고, 
더 이상 방문할 수 있는 점이 없는 경우 종료한다. 정점 번호는 1번부터 N번까지이다.
'''

'''
첫째 줄에 정점의 개수 N(1 ≤ N ≤ 1,000), 간선의 개수 M(1 ≤ M ≤ 10,000), 
탐색을 시작할 정점의 번호 V가 주어진다. 다음 M개의 줄에는 간선이 연결하는 두 정점의 번호가 주어진다. 
어떤 두 정점 사이에 여러 개의 간선이 있을 수 있다. 입력으로 주어지는 간선은 양방향이다.
'''

# n은 정점의 개수, m은 간선의 개수, v는 탐색을 시작할 정점의 번호(시작정점)
n, m, v = map(int, input().split())

vertix = [i for i in range(1, n+1)]  # 정점의 정보를 저장할 리스트
edge = []

for _ in range(m):
    edge.append(list(map(int, input().split())))

edge.sort()  # 오름차순으로 정렬 1번 정점부터 연결정보가 표시될것

adj = [[] for v in vertix]  # 정점의 개수만큼 생성

# 연결리스트 생성
for e in edge:  # 간선 리스트에서 간성정보를 한개씩 뽑아서
    adj[e[0]-1].append(e[1])  # 간선 삽입 0번 인덱스부터 삽입되어야 함
    adj[e[1]-1].append(e[0])  # 위 문제의 경우 양방향 리스트임


# 첫째줄에는 DFS를 수행한 결과 두번째 줄에는 BFS를 수행한 결과를 출력한다.
