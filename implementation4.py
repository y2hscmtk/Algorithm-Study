# 게임 개발

# 현민이는 게임 캐릭터가 맵 안에서 움직이는 시스템을 개발 중이다.
# 캐릭터가 있는 장소는 1x1 크기의 정사각형으로 이뤄진 NxM 크키의 직사각형으로, 각각의 칸은 육지 또는 바다이다.
# 캐릭터는 동서남북 중 한 곳을 바라본다.

# 맵의 각 칸은 (A,B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수, B는 서쪽으로부터 떨어진 칸의 개수이다.
# 캐릭터는 상하좌우로 움직일 수 있고, 바다로 되어 있는 공간에는 갈 수 없다.
# 캐릭터의 움직임을 설정하기 위해 정해놓은 메뉴얼은 다음과 같다.

# 1. 현재 위치에서 현재 방향을 기준으로 왼쪽 방향(반시계 방향으로 90도 회전한 방향)부터 차례대로 갈 곳을 정한다.
# 2. 캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 칸이 존재한다면, 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다.
#    왼쪽 방향에 가보지 않은 칸이 없다면, 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.

# 3. 만약 네 방향 모두 이미 가본 칸이거나 바다로 되어 있는 칸인 경우에는, 바라보는 방향을 유지한 채로 한 칸 뒤로 가고 1단계로 돌아간다.
#    단, 이때 뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.

# 입력조건 : 첫째 줄에 맵의 세로 크기 N과 가로 크기 M을 공백으로 구분하여 입력한다. (3<=N, M<=50)
#           둘째 줄에 게임 캐릭터가 있는 칸의 좌표 (A,B)와 바라보는 방향 d가 서로 공백으로 구분하여 주어진다. 방향 d의 값으로는 다음과 같이 4가지가 존재한다.
#           0 북 1 남 2 동 3 서
#           셋째 줄부터 맵이 육지인지 바다인지에 대한 정보가 주어진다. N개의 줄에 맵의 상태가 북쪽부터 남쪽 순서대로, 각 줄의 데이터는 서쪽부터 동쪽 순서대로 주어진다.
#           맵의 외곽은 항상 바다이다. 0 육지 1 바다
#           처음에 게임 캐릭터가 위치한 칸의 상태는 항상 육지이다.
# 출력조건 : 첫째 줄에 이동을 마친 후 캐릭터가 방문한 칸의 수를 출력한다.

# 입력예시 : 4 4 # 4 x 4 맵 생성
#           1 1 0 # (1,1)에 북쪽(0)을 바라보고 서 있는 캐릭터
#           1 1 1 1 # 첫 줄은 모두 바다
#           1 0 0 1 # 둘째 줄은 바다/육지/육지/바다
#           1 1 0 1 # 셋째 줄은 바다/바다/육지/바다
#           1 1 1 1 # 넷째 줄은 모두 바다

n, m = map(int, input().split())

x, y, d = map(int, input().split())  # 캐릭터의 초기(x,y)좌표와 초기 방향

game_map = [list(map(int, input().split())) for _ in range(n)]  # 맵 설정

game_map[y][x] = 2  # 현재 위치를 방문한 위치로 설정

visit = 1  # 방문한 칸의 횟수 저장

dx = (0, 1, 0, -1)
dy = (-1, 0, 1, 0)

direction = [0, 1, 2, 3]  # 북 동 남 서 방향
count = 0

while True:
    mx = 0
    my = 0
    if count == 4:  # 이동스택이 4라면 => 모든 방향을 다 방문했거나, 바다라면
        # 뒤쪽 방향이 바다인 칸인지 체크
        mx = x + dx[direction[d-2]]
        my = y + dy[direction[d-2]]
        if game_map[my][mx] == 1:
            break
        else:  # 바다가 아니라면 방향을 유지한 채 뒤로 한 칸 이동
            x = mx
            y = my
            count = 0  # 이동실패스택 초기화
    else:
        mx = x + dx[direction[d-1]]
        my = y + dy[direction[d-1]]
        # 만약 캐릭터의 왼쪽방향이 바다, 혹은 방문한 곳이 아니라면 (방문한 곳은 2로 처리)
        if game_map[my][mx] != 1 and game_map[my][mx] != 2:
            # 이동 후 방향 변경
            d = direction[d-1]  # 방향을 왼쪽방향으로 회전
            # 왼쪽방향으로 이동
            x = x + dx[d]
            y = y + dy[d]
            game_map[y][x] = 2  # 방문한 칸은 2로 처리
            visit += 1  # 방문한 칸 횟수 증가
            count = 0  # 이동실패 스택 초기화
        else:  # 만약 캐릭터의 왼쪽방향이 바다, 혹은 방문한 곳이라면
            d = direction[d-1]  # 왼쪽방향으로 회전
            count += 1  # 이동실패 스택+1 => count가 4가 된다면 모든 방향이 가본 곳이거나, 방문한 곳임을 의미

print(visit)
